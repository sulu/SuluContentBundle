<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <service id="sulu_content.metadata_loader" class="Sulu\Bundle\ContentBundle\Content\Infrastructure\Doctrine\MetadataLoader">
            <!-- Priority 100 as the MetadataLoader need to be before the ResolveTargetEntityListener of Doctrine -->
            <tag name="doctrine.event_subscriber" priority="100"/>
        </service>

        <service id="sulu_content.content_view_builder" class="Sulu\Bundle\ContentBundle\Content\Infrastructure\Sulu\Admin\ContentViewBuilder">
            <argument type="service" id="sulu_admin.view_builder_factory"/>
        </service>

        <service id="Sulu\Bundle\ContentBundle\Content\Infrastructure\Sulu\Admin\ContentViewBuilderInterface" alias="sulu_content.content_view_builder"/>

        <!-- ContentProjectionFactory -->
        <service id="sulu_content.content_projection_factory" class="Sulu\Bundle\ContentBundle\Content\Application\ContentProjectionFactory\ContentProjectionFactory">
            <argument type="tagged" tag="sulu_content.content_projection_factory_merger"/>
        </service>

        <service id="Sulu\Bundle\ContentBundle\Content\Domain\Factory\ContentProjectionFactoryInterface" alias="sulu_content.content_projection_factory"/>

        <!-- TagFactory -->
        <service id="sulu_content.tag_factory" class="Sulu\Bundle\ContentBundle\Content\Infrastructure\Doctrine\TagFactory">
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <argument type="service" id="sulu.repository.tag"/>
        </service>

        <!-- CategoryFactory -->
        <service id="sulu_content.category_factory" class="Sulu\Bundle\ContentBundle\Content\Infrastructure\Doctrine\CategoryFactory">
            <argument type="service" id="doctrine.orm.entity_manager"/>
        </service>

        <!-- DimensionCollection Factory -->
        <service id="sulu_content.dimension_collection_factory" class="Sulu\Bundle\ContentBundle\Content\Domain\Factory\DimensionCollectionFactory">
            <argument type="service" id="sulu.repository.dimension"/>
        </service>

        <!-- Content Dimension Factory -->
        <service id="sulu_content.dimension_content_collection_factory" class="Sulu\Bundle\ContentBundle\Content\Application\DimensionContentFactory\DimensionContentCollectionFactory">
            <argument type="service" id="sulu_content.dimension_content_repository"/>
            <argument type="tagged" tag="sulu_content.data_mapper"/>
        </service>

        <service id="Sulu\Bundle\ContentBundle\Content\Domain\Factory\DimensionContentCollectionFactoryInterface" alias="sulu_content.dimension_content_collection_factory"/>

        <!-- Content Dimension Loader -->
        <service id="sulu_content.dimension_content_repository" class="Sulu\Bundle\ContentBundle\Content\Infrastructure\Doctrine\DimensionContentRepository">
            <argument type="service" id="doctrine.orm.entity_manager"/>
        </service>

        <service id="Sulu\Bundle\ContentBundle\Content\Domain\Repository\DimensionContentRepositoryInterface" alias="sulu_content.dimension_content_repository"/>

        <!-- Route Defaults Provider -->
        <service id="sulu_content.route_defaults_provider" class="Sulu\Bundle\ContentBundle\Content\Infrastructure\Sulu\Route\ContentRouteDefaultsProvider">
            <argument type="service" id="doctrine.orm.entity_manager"/>
            <argument type="service" id="sulu_content.content_resolver"/>
            <argument type="service" id="sulu_page.structure.factory"/>
            <argument type="service" id="sulu_page.compat.structure.legacy_property_factory"/>
            <argument type="service" id="sulu_http_cache.cache_lifetime.resolver"/>

            <tag name="sulu_route.defaults_provider"/>
        </service>

        <!-- Content Persister -->
        <service id="sulu_content.content_persister" class="Sulu\Bundle\ContentBundle\Content\Application\ContentPersister\ContentPersister">
            <argument type="service" id="sulu_content.dimension_collection_factory"/>
            <argument type="service" id="sulu_content.dimension_content_collection_factory"/>
            <argument type="service" id="sulu_content.content_projection_factory"/>
        </service>

        <service id="Sulu\Bundle\ContentBundle\Content\Application\ContentPersister\ContentPersisterInterface" alias="sulu_content.content_persister"/>

        <!-- Content Loader -->
        <service id="sulu_content.content_resolver" class="Sulu\Bundle\ContentBundle\Content\Application\ContentResolver\ContentResolver">
            <argument type="service" id="sulu.repository.dimension"/>
            <argument type="service" id="sulu_content.dimension_content_repository"/>
            <argument type="service" id="sulu_content.content_projection_factory"/>
        </service>

        <service id="Sulu\Bundle\ContentBundle\Content\Application\ContentResolver\ContentResolverInterface" alias="sulu_content.content_resolver"/>

        <!-- ContentProjectionNormalizer -->
        <service id="sulu_content.content_projection_normalizer" class="Sulu\Bundle\ContentBundle\Content\Application\ContentProjectionNormalizer\ContentProjectionNormalizer">
            <argument type="tagged" tag="sulu_content.normalize_enhancer"/>
        </service>

        <service id="Sulu\Bundle\ContentBundle\Content\Application\ContentProjectionNormalizer\ContentProjectionNormalizerInterface" alias="sulu_content.content_projection_normalizer"/>

        <!-- Content Copier -->
        <service id="sulu_content.content_copier" class="Sulu\Bundle\ContentBundle\Content\Application\ContentCopier\ContentCopier">
            <argument type="service" id="sulu_content.content_resolver"/>
            <argument type="service" id="sulu_content.content_projection_factory"/>
            <argument type="service" id="sulu_content.content_persister"/>
            <argument type="service" id="sulu_content.content_projection_normalizer"/>
        </service>

        <service id="Sulu\Bundle\ContentBundle\Content\Application\ContentCopier\ContentCopierInterface" alias="sulu_content.content_copier"/>

        <!-- Content Workflow -->
        <service id="sulu_content.content_workflow" class="Sulu\Bundle\ContentBundle\Content\Application\ContentWorkflow\ContentWorkflow">
            <argument type="service" id="sulu.repository.dimension"/>
            <argument type="service" id="sulu_content.dimension_content_repository"/>
            <argument type="service" id="sulu_content.content_projection_factory"/>
            <argument type="service" id="workflow.registry" on-invalid="null"/>
            <argument type="service" id="event_dispatcher"/>
        </service>

        <service id="Sulu\Bundle\ContentBundle\Content\Application\ContentWorkflow\ContentWorkflowInterface" alias="sulu_content.content_workflow" />

        <!-- Content Publish Subscriber -->
        <service id="sulu_content.content_publish_subscriber" class="Sulu\Bundle\ContentBundle\Content\Application\ContentWorkflow\Subscriber\ContentPublishSubscriber">
            <argument type="service" id="sulu_content.content_copier"/>

            <tag name="kernel.event_subscriber"/>
        </service>

        <!-- Content Manager -->
        <service id="sulu_content.content_manager" class="Sulu\Bundle\ContentBundle\Content\Application\ContentManager\ContentManager">
            <argument type="service" id="sulu_content.content_resolver"/>
            <argument type="service" id="sulu_content.content_persister"/>
            <argument type="service" id="sulu_content.content_projection_normalizer"/>
            <argument type="service" id="sulu_content.content_copier"/>
            <argument type="service" id="sulu_content.content_workflow"/>
        </service>

        <service id="Sulu\Bundle\ContentBundle\Content\Application\ContentManager\ContentManagerInterface" alias="sulu_content.content_manager"/>
    </services>
</container>
