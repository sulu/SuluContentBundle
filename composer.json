{
    "name": "sulu/content-bundle",
    "type": "sulu-bundle",
    "description": "Experimental content implementation for sulu.",
    "authors": [
        {
            "name": "SuluContentBundle",
            "homepage": "https://github.com/sulu/SuluContentBundle/contributors"
        }
    ],
    "homepage": "https://github.com/sulu/SuluContentBundle",
    "license": "MIT",
    "require": {
        "php": "^7.2 || ^8.0",
        "doctrine/inflector": "^1.4.1 || ^2.0.1",
        "doctrine/collections": "^1.0",
        "doctrine/orm": "^2.5.3 || ^2.8",
        "doctrine/persistence": "^1.3 || ^2.0",
        "doctrine/doctrine-bundle": "^1.10 || ^2.0",
        "friendsofsymfony/rest-bundle": "^2.6 || ^3.0",
        "massive/search-bundle": "^2.4",
        "ramsey/uuid": "^3.8 || ^4.0",
        "sulu/sulu": "2.6.x-dev",
        "symfony/config": "^4.4 || ^5.4 || ^6.0",
        "symfony/dependency-injection": "^4.4 || ^5.4 || ^6.0",
        "symfony/event-dispatcher": "^4.4 || ^5.4 || ^6.0",
        "symfony/http-foundation": "^4.4 || ^5.4 || ^6.0",
        "symfony/http-kernel": "^4.4 || ^5.4 || ^6.0",
        "symfony/options-resolver": "^4.4 || ^5.4 || ^6.0",
        "symfony/property-access": "^4.4 || ^5.4 || ^6.0",
        "symfony/security-core": "^4.4 || ^5.4 || ^6.0",
        "symfony/serializer": "^4.4 || ^5.4 || ^6.0",
        "symfony/translation-contracts": "^1.0 || ^2.0 || ^3.0",
        "symfony/workflow": "^4.4 || ^5.4 || ^6.0",
        "webmozart/assert": "^1.3"
    },
    "require-dev": {
        "coduo/php-matcher": "^5.0.1 || ^6.0",
        "doctrine/data-fixtures": "^1.3.3",
        "doctrine/doctrine-fixtures-bundle": "^2.0 || ^3.0",
        "friendsofphp/php-cs-fixer": "^3.4",
        "handcraftedinthealps/code-coverage-checker": "^0.2.1",
        "handcraftedinthealps/zendsearch": "^2.0",
        "jackalope/jackalope-doctrine-dbal": "^1.3.4",
        "jangregor/phpstan-prophecy": "^1.0",
        "matthiasnoback/symfony-config-test": "^4.3",
        "matthiasnoback/symfony-dependency-injection-test": "^4.3",
        "phpspec/prophecy": "^1.14",
        "phpspec/prophecy-phpunit": "^2.0",
        "phpstan/phpstan": "^1.0",
        "phpstan/phpstan-doctrine": "^1.0",
        "phpstan/phpstan-phpunit": "^1.0",
        "phpstan/phpstan-symfony": "^1.0",
        "phpstan/phpstan-webmozart-assert": "^1.0",
        "phpunit/phpunit": "^8.5.33 || ^9.6.5",
        "qossmic/deptrac-shim": "^0.11.1 || ^0.23.0 || ^1.0",
        "sulu/automation-bundle": "^2.0@dev || ^2.1",
        "symfony/browser-kit": "^4.4 || ^5.4 || ^6.0",
        "symfony/console": "^4.4 || ^5.4 || ^6.0",
        "symfony/dotenv": "^4.4 || ^5.4 || ^6.0",
        "symfony/framework-bundle": "^4.4 || ^5.4 || ^6.0",
        "symfony/monolog-bundle": "^3.1",
        "symfony/phpunit-bridge": "^5.4 || ^6.0",
        "symfony/string": "^4.4 || ^5.4 || ^6.0",
        "thecodingmachine/phpstan-strict-rules": "^1.0"
    },
    "conflict": {
        "coduo/php-matcher": "6.0.12",
        "doctrine/persistence": "1.3.2",
        "doctrine/orm": "2.10.0 || 2.14.2 || >=2.16.0"
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "composer/package-versions-deprecated": true,
            "php-http/discovery": true
        }
    },
    "autoload": {
        "psr-4": {
            "Sulu\\Bundle\\ContentBundle\\": ""
        },
        "exclude-from-classmap": ["/Tests/"]
    },
    "autoload-dev": {
        "psr-4": {
            "Sulu\\Bundle\\ContentBundle\\Tests\\": "Tests/"
        },
        "exclude-from-classmap": ["/Tests/Application/assets"]
    },
    "scripts": {
        "bootstrap-dev-environment": [
            "@php Tests/Application/bin/adminconsole sulu:build dev --env dev"
        ],
        "bootstrap-test-environment": [
            "@php Tests/Application/bin/adminconsole doctrine:database:drop --if-exists --force --env test",
            "@php Tests/Application/bin/adminconsole doctrine:database:create --env test",
            "@php Tests/Application/bin/adminconsole doctrine:schema:update --force --env test"
        ],
        "lint": [
            "@phpstan",
            "@php-cs",
            "@lint-twig",
            "@lint-yaml",
            "@lint-container",
            "@lint-composer",
            "@lint-doctrine",
            "@deptrac"
        ],
        "test": [
            "@phpunit"
        ],
        "phpunit": "@php vendor/bin/phpunit",
        "test-with-coverage": "@phpunit --coverage-php Tests/reports/coverage.php --coverage-html Tests/reports/html --log-junit Tests/reports/unit/junit.xml --coverage-clover Tests/reports/clover.xml",
        "check-coverage": [
            "@php vendor/bin/code-coverage-checker \"Tests/reports/coverage.php\" \"line\" \"100.00\" \"Content\" \"DependencyInjection\""
        ],
        "phpstan": [
            "@php Tests/Application/bin/adminconsole cache:warmup --env dev",
            "@php vendor/bin/phpstan analyze"
        ],
        "php-cs": "@php vendor/bin/php-cs-fixer fix --verbose --diff --dry-run",
        "php-cs-fix": "@php vendor/bin/php-cs-fixer fix",
        "lint-composer": "@composer validate --strict",
        "lint-twig": "@php Tests/Application/bin/adminconsole lint:twig Tests/Application/templates",
        "lint-yaml": "@php Tests/Application/bin/adminconsole lint:yaml Resources/config Tests/Application/config",
        "lint-container": [
            "@php Tests/Application/bin/adminconsole lint:container --env dev",
            "@php Tests/Application/bin/websiteconsole lint:container --env dev",
            "@php Tests/Application/bin/adminconsole lint:container --env test",
            "@php Tests/Application/bin/websiteconsole lint:container --env test",
            "@php Tests/Application/bin/adminconsole lint:container --env stage",
            "@php Tests/Application/bin/websiteconsole lint:container --env stage",
            "@php Tests/Application/bin/adminconsole lint:container --env prod",
            "@php Tests/Application/bin/websiteconsole lint:container --env prod"
        ],
        "lint-doctrine": [
            "@php Tests/Application/bin/adminconsole doctrine:schema:validate --skip-sync",
            "@php Tests/Application/bin/adminconsole doctrine:ensure-production-settings --env prod"
        ],
        "deptrac": "@php vendor/bin/deptrac"
    },
    "extra": {
        "public-dir": "Tests/Application/public"
    }
}
