# PHP CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1

.environment_variables: &environment_variables
    APP_ENV: test
    DATABASE_URL: mysql://root:root@127.0.0.1:3306/su_content_test
    DATABASE_CHARSET: utf8mb4
    DATABASE_COLLATE: utf8mb4_unicode_ci

commands:
    enable_php_pcov:
        steps:
            - run:
                  name: Enable PCOV, disable Xdebug
                  command: |
                      docker-php-ext-enable pcov
                      rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini || true

    disable_php_memory_limit:
        steps:
            - run:
                  name: Disable PHP memory limit
                  command: echo -e 'memory_limit=-1' > /usr/local/etc/php/conf.d/memory_limit.ini

workflows:
    version: 2
    default:
        jobs:
            - composer
            - lint:
                  requires:
                      - composer
            - test:
                  requires:
                      - composer
            - check-coverage:
                  requires:
                      - composer
                      - test
            - coverage-all-upload:
                  requires:
                      - test

jobs:
    composer:
        docker:
            - image: composer:latest
        steps:
            - checkout
            - run: composer config -g cache-dir "$(pwd)/.composer-cache"
            - run: composer config platform.php "7.4.12"
            - restore_cache:
                  keys:
                      - v10-composer-cache-{{ checksum "composer.json" }}
                      - v10-composer-cache-
            - run: composer install -n --prefer-dist --no-scripts
            - run: composer phpunit -- install
            - run: curl --show-error --silent https://getcomposer.org/installer | php
            - save_cache:
                  paths:
                      - .composer-cache
                  key: v10-composer-cache-{{ checksum "composer.json" }}
            - persist_to_workspace:
                  root: .
                  paths:
                      - vendor
                      - composer.phar
                      - composer.lock
    lint:
        docker:
            - image: sulu/php:7.4-cli
            - image: mysql:5.7
              environment:
                  MYSQL_ROOT_PASSWORD: root
        environment: *environment_variables
        steps:
            - run: echo "waiting for mysql container startup" && sleep 5
            - checkout
            - attach_workspace:
                  at: .
            - run: php composer.phar config platform.php "7.4.12"
            - run: php composer.phar info
            - run: php composer.phar bootstrap-test-environment
            - run: php composer.phar lint

    test:
        docker:
            - image: sulu/php:7.4-cli
            - image: mysql:5.7
              environment:
                  MYSQL_ROOT_PASSWORD: root
        environment: *environment_variables
        steps:
            - run: echo "waiting for mysql container startup" && sleep 5
            - checkout
            - attach_workspace:
                  at: .
            - enable_php_pcov
            - disable_php_memory_limit
            - run: php -m
            - run: php composer.phar bootstrap-test-environment
            - run: php composer.phar test-with-coverage
            - store_artifacts:
                  path: Tests/reports/html
            - store_test_results:
                  path: Tests/reports
            - persist_to_workspace:
                  root: .
                  paths:
                      - Tests/reports

    check-coverage:
        docker:
            - image: sulu/php:7.4-cli
        environment: *environment_variables
        steps:
            - checkout
            - attach_workspace:
                  at: .
            - enable_php_pcov
            - disable_php_memory_limit
            - run: php composer.phar check-coverage

    coverage-all-upload:
        docker:
            - image: sulu/php:7.4-cli
        environment: *environment_variables
        steps:
            - checkout
            - attach_workspace:
                  at: .
            - disable_php_memory_limit
            - run: curl -L https://github.com/php-coveralls/php-coveralls/releases/download/v2.1.0/php-coveralls.phar --output php-coveralls.phar
            - run: chmod +x php-coveralls.phar
            - run: apt-get update && apt-get install git -y
            - run: php php-coveralls.phar --coverage_clover Tests/reports/clover.xml --json_path Tests/reports/coveralls.json
