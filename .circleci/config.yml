# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2

.environment_variables: &environment_variables
    APP_ENV: test
    DATABASE_URL: mysql://root:root@127.0.0.1:3306/su_content_test
    DATABASE_CHARSET: utf8mb4
    DATABASE_COLLATE: utf8mb4_unicode_ci

workflows:
    version: 2
    default:
        jobs:
            - composer
            - lint:
                  requires:
                      - composer
            - test:
                  requires:
                      - composer

jobs:
    composer:
        docker:
            - image: composer:latest
        steps:
            - checkout
            - run: composer config -g cache-dir "$(pwd)/.composer-cache"
            - restore_cache:
                  keys:
                      - v7-composer-cache-{{ checksum "composer.json" }}
                      - v7-composer-cache-
            - run: composer install -n --prefer-dist --ignore-platform-reqs --no-scripts
            - run: curl --show-error --silent https://getcomposer.org/installer | php
            - save_cache:
                  paths:
                      - .composer-cache
                  key: v7-composer-cache-{{ checksum "composer.json" }}
            - persist_to_workspace:
                  root: .
                  paths:
                      - vendor
                      - composer.phar
                      - composer.lock
    lint:
        docker:
            - image: sulu/php:7.2-cli
            - image: mysql:5.7
              environment:
                  MYSQL_ROOT_PASSWORD: root
        environment: *environment_variables
        steps:
            - run: echo "waiting for mysql container startup" && sleep 5
            - checkout
            - attach_workspace:
                  at: .
            - run: php composer.phar info
            - run: ls vendor/symfony/framework-bundle/
            - run: php composer.phar bootstrap-test-environment
            - run: php composer.phar lint
    test:
        docker:
            - image: sulu/php:7.2-cli
            - image: mysql:5.7
              environment:
                  MYSQL_ROOT_PASSWORD: root
        environment: *environment_variables
        steps:
            - run: echo "waiting for mysql container startup" && sleep 5
            - checkout
            - attach_workspace:
                  at: .
            - run:
                  name: Enable PCOV, disable Xdebug
                  command: |
                      pecl install pcov
                      docker-php-ext-enable pcov
                      rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini || true
            - run: php -m
            - run: php composer.phar bootstrap-test-environment
            - run: php composer.phar test-coverage
            - store_artifacts:
                  path: Tests/reports/html
            - store_test_results:
                  path: Tests/reports
            - run: php composer.phar test-coverage-checker
